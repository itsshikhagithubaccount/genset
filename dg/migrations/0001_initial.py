# Generated by Django 3.2.10 on 2022-05-06 05:02

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BatteryMaster',
            fields=[
                ('battery_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('battery_current_voltage', models.CharField(blank=True, max_length=45, null=True)),
                ('battery_reading_timestamp', models.DateTimeField(blank=True, null=True)),
                ('battery_template_name', models.CharField(blank=True, max_length=45, null=True)),
                ('battery_name', models.CharField(blank=True, max_length=45, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=100)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('modified_user', models.ForeignKey(blank=True, db_column='modified_user_city', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_city', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_column='modified_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dg_city',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=20, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.city')),
            ],
        ),
        migrations.CreateModel(
            name='DgExternalTankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_tank_current_level', models.IntegerField(blank=True, null=True)),
                ('external_tank_reading_timestamp', models.IntegerField(blank=True, null=True)),
                ('dg_master_name', models.CharField(blank=True, max_length=45, null=True)),
                ('dg_external_tank_name', models.CharField(blank=True, max_length=45, null=True)),
                ('external_tank_capacity', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DgTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dg_template_name', models.CharField(blank=True, max_length=45, null=True)),
                ('dg_rating', models.IntegerField(blank=True, null=True)),
                ('dg_rated_kw', models.IntegerField(blank=True, null=True)),
                ('dg_rated_current_amp', models.IntegerField(blank=True, null=True)),
                ('dg_size', models.IntegerField(blank=True, null=True)),
                ('dg_weight_kg', models.IntegerField(blank=True, null=True)),
                ('engine_bhp', models.IntegerField(blank=True, null=True)),
                ('engine_cylinder', models.IntegerField(blank=True, null=True)),
                ('engine_rpm', models.IntegerField(blank=True, null=True)),
                ('engine_bore_mm_field', models.IntegerField(blank=True, db_column='engine_bore(mm)', null=True)),
                ('engine_stroke_mm_field', models.IntegerField(blank=True, db_column='engine_stroke(mm)', null=True)),
                ('engine_displacement_ltr_field', models.IntegerField(blank=True, db_column='engine_displacement(ltr)', null=True)),
                ('engine_compression_ratio', models.IntegerField(blank=True, null=True)),
                ('engine_sfc_gsm_hr_field', models.IntegerField(blank=True, db_column='engine_sfc(gsm_bhp_hr)', null=True)),
                ('engine_governor', models.IntegerField(blank=True, null=True)),
                ('engine_class_of_governing', models.IntegerField(blank=True, null=True)),
                ('engine_aspiration', models.IntegerField(blank=True, null=True)),
                ('engine_air_filter', models.IntegerField(blank=True, null=True)),
                ('engine_type_of_oil', models.CharField(blank=True, max_length=45, null=True)),
                ('engine_oil_sump_capacity_ltr', models.IntegerField(blank=True, null=True)),
                ('engine_fuel', models.IntegerField(blank=True, null=True)),
                ('engine_lube_oil_consumption_gms_bhp_hr', models.IntegerField(blank=True, null=True)),
                ('cooling_bare_radiator_coolant_ltr', models.IntegerField(blank=True, null=True)),
                ('cooling_coolant_capacity_with_engine_jacket_ltr', models.IntegerField(blank=True, null=True)),
                ('cooling_engine_dry_weight_kgs', models.IntegerField(blank=True, null=True)),
                ('cooling_electric_starting_system', models.IntegerField(blank=True, null=True)),
                ('alternator_model', models.CharField(blank=True, max_length=45, null=True)),
                ('alternator_kva', models.IntegerField(blank=True, null=True)),
                ('alternator_voltage', models.IntegerField(blank=True, null=True)),
                ('alternator_no_of_phases', models.IntegerField(blank=True, null=True)),
                ('alternator_power_factor', models.IntegerField(blank=True, null=True)),
                ('alternator_speed_rpm_frequency', models.IntegerField(blank=True, null=True)),
                ('alternator_voltage_regulation', models.IntegerField(blank=True, null=True)),
                ('alternator_enclosure', models.CharField(blank=True, max_length=45, null=True)),
                ('alternator_insulation', models.CharField(blank=True, max_length=45, null=True)),
                ('alternator_weight_of_acg_kgs', models.CharField(blank=True, max_length=45, null=True)),
                ('battery_type', models.CharField(blank=True, max_length=45, null=True)),
                ('battery_rating_ah', models.IntegerField(blank=True, null=True)),
                ('battery_quantity_nos', models.IntegerField(blank=True, null=True)),
                ('battery_charging_facility', models.IntegerField(blank=True, null=True)),
                ('battery_metering', models.IntegerField(blank=True, null=True)),
                ('exhaust_silencer_type', models.CharField(blank=True, max_length=45, null=True)),
                ('exhaust_location', models.CharField(blank=True, max_length=44, null=True)),
                ('exhaust_pipe_size_in_mm', models.IntegerField(blank=True, null=True)),
                ('fuel_tank_type', models.CharField(blank=True, max_length=45, null=True)),
                ('fuel_tank_capacity_ltr', models.IntegerField(blank=True, null=True)),
                ('canopy_type', models.CharField(blank=True, max_length=45, null=True)),
                ('canopy_sheet_metal', models.CharField(blank=True, max_length=45, null=True)),
                ('canopy_draft', models.CharField(blank=True, max_length=45, null=True)),
                ('canopy_insulation', models.CharField(blank=True, max_length=45, null=True)),
                ('canopy_noise_level_al_1m', models.CharField(blank=True, max_length=45, null=True)),
                ('other_base_frame', models.CharField(blank=True, max_length=45, null=True)),
                ('other_avm_qty_nos', models.IntegerField(blank=True, null=True)),
                ('other_emergency_stop', models.CharField(blank=True, max_length=45, null=True)),
                ('other_internal_lights', models.CharField(blank=True, max_length=45, null=True)),
                ('control_panel_dg_parameter_monitoring_display', models.CharField(blank=True, max_length=45, null=True)),
                ('control_panel_engine_parameter_monitoring_display', models.CharField(blank=True, max_length=45, null=True)),
                ('control_panel_functions', models.CharField(blank=True, max_length=45, null=True)),
                ('control_panel_protection', models.CharField(blank=True, max_length=45, null=True)),
                ('control_panel_safeties', models.CharField(blank=True, max_length=45, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_user', models.ForeignKey(blank=True, db_column='modified_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_dgstate', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_user_dgstate', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DieselLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(blank=True, max_length=45, null=True)),
                ('gps_coordinate', models.CharField(blank=True, max_length=45, null=True)),
                ('longitude_latitude', models.CharField(blank=True, max_length=45, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.city')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.company')),
                ('modified_user', models.ForeignKey(blank=True, db_column='modified_user_location', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_diesel_location', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DieselMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dg_name', models.CharField(max_length=49)),
                ('dg_model', models.CharField(blank=True, max_length=40, null=True)),
                ('dg_make', models.CharField(blank=True, max_length=45, null=True)),
                ('dg_voltage', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('dg_power', models.CharField(blank=True, max_length=45, null=True)),
                ('attendant_id', models.IntegerField(blank=True, null=True)),
                ('diesel_attend_name', models.CharField(blank=True, max_length=45, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('diesel_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.diesellocation')),
                ('diesel_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.dgtemplate')),
                ('modified_user', models.ForeignKey(blank=True, db_column='modified_user_diesel', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_diesel_master', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_user_diesel_master', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=100, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_user', models.ForeignKey(blank=True, db_column='modified_user_state', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_state', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_column='modified_userr', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_userr', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='John Doe (Default)', max_length=200, null=True)),
                ('bio', models.CharField(blank=True, max_length=50)),
                ('phone_number', models.CharField(blank=True, max_length=12)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('profile_img', models.ImageField(blank=True, default='media/2.png', null=True, upload_to='media')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dg_type', models.CharField(blank=True, max_length=45, null=True)),
                ('category', models.CharField(blank=True, max_length=45, null=True)),
                ('historical_cost', models.CharField(blank=True, max_length=45, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('dg_master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.dieselmaster')),
                ('modified_user', models.ForeignKey(blank=True, db_column='modified_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_maintenance', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceAuditTrial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_master_name', models.CharField(blank=True, max_length=45, null=True)),
                ('dg_name', models.CharField(blank=True, max_length=45, null=True)),
                ('dg_number', models.IntegerField()),
                ('dg_type', models.CharField(blank=True, max_length=45, null=True)),
                ('category', models.CharField(blank=True, max_length=45, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=45, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('dg_master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.dieselmaster')),
                ('maintenance_master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.maintenancemaster')),
                ('modified_user', models.ForeignKey(blank=True, db_column='modified_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_audit', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_user_audit', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FuelLevelMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dg_name', models.CharField(blank=True, max_length=45, null=True)),
                ('fuel_current_level', models.IntegerField(blank=True, null=True)),
                ('monitoring_time', models.CharField(blank=True, max_length=45, null=True)),
                ('diesel_on_time', models.CharField(blank=True, max_length=45, null=True)),
                ('diesel_off_time', models.CharField(blank=True, max_length=45, null=True)),
                ('fuel_level_name', models.CharField(blank=True, max_length=45, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('dg_master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.dieselmaster')),
                ('modified_user', models.ForeignKey(blank=True, db_column='modified_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_fuel_level', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_user_fuel_level', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='diesellocation',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.state'),
        ),
        migrations.AddField(
            model_name='diesellocation',
            name='user',
            field=models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_user_location', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DgState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dg_start_time', models.CharField(blank=True, max_length=45, null=True)),
                ('dg_off_time', models.CharField(blank=True, max_length=45, null=True)),
                ('dg_master_name', models.CharField(blank=True, max_length=45, null=True)),
                ('battery_master_name', models.CharField(blank=True, max_length=45, null=True)),
                ('dg_externaltank_name', models.CharField(blank=True, max_length=45, null=True)),
                ('fuel_level_name', models.CharField(blank=True, max_length=45, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('battery_master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.batterymaster')),
                ('dg_externaltank_master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.dgexternaltankdetails')),
                ('dg_master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.dieselmaster')),
                ('fuel_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.fuellevelmonitoring')),
                ('modified_user', models.ForeignKey(blank=True, db_column='modified_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_dg_state', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_user_dg_state', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='dgexternaltankdetails',
            name='dg_master',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.dieselmaster'),
        ),
        migrations.AddField(
            model_name='dgexternaltankdetails',
            name='modified_user',
            field=models.ForeignKey(blank=True, db_column='modified_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_external_tank', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dgexternaltankdetails',
            name='user',
            field=models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_user_external_tank', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=100, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_user', models.ForeignKey(blank=True, db_column='modified_user_country', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_country', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_column='modified_userrr', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_countryy', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.country'),
        ),
        migrations.AddField(
            model_name='company',
            name='modified_user',
            field=models.ForeignKey(blank=True, db_column='modified_user_company', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_company', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.state'),
        ),
        migrations.AddField(
            model_name='company',
            name='user',
            field=models.ForeignKey(blank=True, db_column='modified_us', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_companyy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BatteryTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battery_template_name', models.CharField(blank=True, max_length=45, null=True)),
                ('type', models.CharField(blank=True, max_length=45, null=True)),
                ('rating_ah', models.CharField(blank=True, max_length=45, null=True)),
                ('quantity_nos', models.IntegerField(blank=True, null=True)),
                ('charging_facility', models.IntegerField(blank=True, null=True)),
                ('make', models.CharField(blank=True, max_length=45, null=True)),
                ('battery_metering', models.CharField(blank=True, max_length=45, null=True)),
                ('battery_current_voltage', models.CharField(blank=True, max_length=45, null=True)),
                ('battery_reading_timestamp', models.DateTimeField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=45, null=True)),
                ('others', models.CharField(blank=True, max_length=45, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_user', models.ForeignKey(blank=True, db_column='modified_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_bt', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_user_bt', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='batterymaster',
            name='battery_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dg.batterytemplate'),
        ),
        migrations.AddField(
            model_name='batterymaster',
            name='modified_user',
            field=models.ForeignKey(blank=True, db_column='modified_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_user_battery_master', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='batterymaster',
            name='user',
            field=models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_user_battery_master', to=settings.AUTH_USER_MODEL),
        ),
    ]
